<UserControl x:Class="PLCEmulator.View.GraphAreaView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:graphxctrl="clr-namespace:GraphX.Controls;assembly=GraphX.WPF.Controls"
             xmlns:graph="clr-namespace:PLCEmulator.Model.Graph"
             xmlns:device="clr-namespace:PLCEmulator.Model.Device"
             AllowDrop="True"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">


    <graphxctrl:ZoomControl x:Name="g_zoomctrl" MouseLeftButtonDown="g_zoomctrl_MouseLeftButtonDown">
        <graph:GraphAreaPE x:Name="g_area" LogicCore="{Binding LogicCore}" Cursor="Hand" VertexClicked="g_area_VertexClicked" />
    </graphxctrl:ZoomControl>

    <UserControl.Resources>
        <!--PLC-->
        <DataTemplate DataType="{x:Type device:PLC}">
            <Path x:Name="PLCPath" Stroke="Black" StrokeThickness="2" Data="{StaticResource ResourceKey=PLC_icon}" Stretch="Fill" Margin="5,5,5,5"/>
        </DataTemplate>

        <!--TURCK-->
        <DataTemplate DataType="{x:Type device:DIOAD}">
            <Path x:Name="DIOADPath" Stroke="Black" Fill="BlanchedAlmond" StrokeThickness="2" Data="{StaticResource ResourceKey=DIOAD_icon}"  Stretch="Fill" Margin="5,5,5,5" />
        </DataTemplate>

        <!--PICK BY LIGHT-->
        <DataTemplate DataType="{x:Type device:PBL}">
            <StackPanel Orientation="Vertical">
                <Path x:Name="PBLPath" Stroke="Black" Fill="White" StrokeThickness="2" Data="{StaticResource ResourceKey=PBL_icon}" Stretch="Fill" Margin="5,5,5,5"/>
            </StackPanel>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Active}" Value="True">
                    <Setter TargetName="PBLPath" Property="Fill" Value="Green"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <!--NUTRUNNER-->
        <DataTemplate DataType="{x:Type device:Nutrunner}">
            <Path x:Name="NutrunnerPath" Stroke="Black" Fill="BlanchedAlmond" StrokeThickness="2" Data="{StaticResource ResourceKey=Nutrunner_icon}"  Stretch="Fill" Margin="5,5,5,5" />
        </DataTemplate>

        <!--EDGE CONTROL-->
        <Style TargetType="graphxctrl:EdgeControl">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="graphxctrl:EdgeControl">
                        <Grid>
                            <!-- PART_edgePath: EVisibility, PART_edgeArrowPath: AVisibility -->
                            <Path Stroke="{TemplateBinding Foreground}"
                          StrokeThickness="2" MinWidth="1" MinHeight="1"
                          ToolTip="{TemplateBinding ToolTip}" 
                            x:Name="PART_edgePath" Visibility="{Binding EVisibility}"/>
                            <graphxctrl:DefaultEdgePointer NeedRotation="true" x:Name="PART_EdgePointerForTarget" Visibility="{Binding AVisibility}">
                                <Path Data="M0,0.5 L1,1 1,0" Fill="Black" Stretch="Uniform" Width="10" Height="10"/>
                            </graphxctrl:DefaultEdgePointer>
                            <graphxctrl:EdgeLabelControl x:Name="PART_edgeLabel" Content="{Binding Edge, RelativeSource={RelativeSource TemplatedParent}}"  />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--EDGE LABEL CONTROL-->
        <Style TargetType="{x:Type graphxctrl:EdgeLabelControl}">
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type graphxctrl:EdgeLabelControl}">
                        <Grid>
                            <Border Background="White" CornerRadius="8" MinWidth="30" >
                                <TextBox x:Name="EdgeText" Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" TextChanged="EdgeText_TextChanged" PreviewTextInput="EdgeText_PreviewTextInput" BorderThickness="0" TextAlignment="Center" FontWeight="DemiBold" FontSize="24" Cursor="Pen" MaxLength="1" />
                                <!--<ContentPresenter Margin="3" TextBlock.TextAlignment="Center" TextBlock.FontWeight="DemiBold" TextBlock.FontSize="24" TextBlock.Foreground="Black" />-->
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--VERTEX CONTROL-->
        <Style TargetType="{x:Type graph:VertexControlPE}">
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type graph:VertexControlPE}">
                        <Border x:Name="VertexBorder" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
                            <Grid>
                                <ContentPresenter Content="{TemplateBinding Vertex}"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <!-- VERTEX DRAGGING CONTROL -->
            <Setter Property="graphxctrl:DragBehaviour.IsDragEnabled"
                Value="True" />
            <Setter Property="graphxctrl:DragBehaviour.UpdateEdgesOnMove"
                Value="True" />

            <!--VERTEXCONTROL TRIGGERS-->
            <Style.Triggers>
                <EventTrigger RoutedEvent="MouseEnter">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="LightBlue" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" Duration="0:0:0.5"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseLeave">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="LightGray" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" Duration="0:0:0.5"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="BorderBrush" Value="CadetBlue" />
                </Trigger>
                <DataTrigger Binding="{Binding Loading}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard x:Name="sbLoading">
                            <Storyboard  Storyboard.TargetProperty="Opacity">
                                <DoubleAnimation Duration="0:0:1" From="1.0" To="0.0" AutoReverse="True" RepeatBehavior="Forever"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                </DataTrigger>
                <DataTrigger Binding="{Binding Loading}" Value="false">
                    <DataTrigger.EnterActions>
                        <StopStoryboard BeginStoryboardName="sbLoading" />
                    </DataTrigger.EnterActions>
                </DataTrigger>
                <DataTrigger Binding="{Binding StartupError}" Value="True">
                    <Setter Property="Background" Value="PaleVioletRed" />
                </DataTrigger>
                <DataTrigger Binding="{Binding StartupError}" Value="False">
                    <Setter Property="Background" Value="LightGray" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
</UserControl>
